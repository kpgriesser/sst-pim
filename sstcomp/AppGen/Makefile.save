#
# AppGen Makefile
#
# Copyright (C) 2017-2024 Tactical Computing Laboratories, LLC
# All Rights Reserved
# contact@tactcomplabs.com
#
# See LICENSE in the top level directory for licensing details
#

ifeq (, $(shell which sst-config))
 $(error "No sst-config in $(PATH), add `sst-config` to your PATH")
endif

CXX=$(shell sst-config --CXX)
CXXFLAGS=$(shell sst-config --ELEMENT_CXXFLAGS)
# CXXFLAGS += -Werror -Wall -Wextra -Wuninitialized -pedantic-errors
# CXXFLAGS += -Werror -Wall -Wuninitialized
CXXFLAGS += -Werror
CXXFLAGS += -DGEM5_MODE -DASST=1
LDFLAGS=$(shell sst-config --ELEMENT_LDFLAGS)

REVHOME=$(realpath ../..)

# Local includes
INCLUDE += -I../include -I.

SST_ELEMENTS_HOME?=$(shell sst-config SST_ELEMENT_LIBRARY SST_ELEMENT_LIBRARY_HOME)
INCLUDE += -I$(SST_ELEMENTS_HOME)/include

ifdef DEBUG
OPTIMIZE_FLAGS+=-O0 -g
else
OPTIMIZE_FLAGS+=-O3
endif

ifdef DEBUG_MODE
OPTIMIZE_FLAGS += -DDEBUG -DDEBUG_MODE -D__SST_DEBUG_OUTPUT__
endif


# .cc, .h, .o file lists
SOURCES := $(wildcard *.cc)
HEADERS := $(wildcard *.h)
# $(error $(SOURCES))
OBJS := $(patsubst %.cc,%.o,$(SOURCES))

COMPONENT_LIB=libAppGen.so

all: $(COMPONENT_LIB)

$(COMPONENT_LIB): $(OBJS)
	$(CXX) $(OPTIMIZE_FLAGS) $(CXXFLAGS) $(INCLUDE) *.o $(LDFLAGS) -o $@
%.o:%.cc $(HEADERS)
	$(CXX) $(OPTIMIZE_FLAGS) $(CXXFLAGS) $(INCLUDE) -c $<

.PHONY: uninstall

# Add your Appx Component to uninstall and install recipes below <port/>

uninstall:
	sst-register -u AppxTest
	sst-register -u RequestGenCPU_KG
	sst-register -u SingleStreamGenerator_KG

install: $(COMPONENT_LIB)
	sst-register AppxTest AppxTest_LIBDIR=$(CURDIR)
	sst-register RequestGenCPU_KG  RequestGenCPU_KG_LIBDIR=$(CURDIR)
	sst-register SingleStreamGenerator_KG SingleStreamGenerator_KG_LIBDIR=$(CURDIR)
	sst-register -l

.PHONY: clean
clean:
	rm -Rf *.o $(COMPONENT_LIB)
